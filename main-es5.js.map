{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account.component.ts","webpack:///src/app/account/account.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authHttpInterceptor.ts","webpack:///src/app/balance/balance.component.ts","webpack:///src/app/balance/balance.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/http.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountComponent","http","getData","subscribe","data","allData","user","console","log","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","cookie","value","get","isValid","length","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthHttpInterceptor","requestCounter","request","next","clone","headers","set","has","handle","pipe","event","BalanceComponent","isLoggedIn","reports","balances","HomeComponent","clickCounter","name","window","location","assign","HttpService","SERVER_URL","email","password","post","company","passwordConfirm","providedIn","LoginComponent","tokenSource","currentToken","asObservable","val","res","status","_id","token","setTimeout","err","alert","message","onLogin","LogoutComponent","href","SignupComponent","onSignup","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss'],\n})\nexport class AccountComponent implements OnInit {\n  allData: Object;\n  name;\n  user;\n  id;\n  email;\n  company;\n\n  constructor(private http: HttpService) {}\n\n  ngOnInit(): void {\n    this.http.getData().subscribe((data) => {\n      this.allData = data;\n      this.user = this.allData[0];\n    \n      console.log('USER DATA IN ACCOUNT', this.user);\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"section\">\n    <span class=\"left\">Name&nbsp;&nbsp;</span>\n    <span class=\"right\">{{ user.name }}</span>\n  </div>\n  <div class=\"section\">\n    <span class=\"left\">Company</span>\n    <span class=\"right\">{{ user.company }}</span>\n  </div>\n  <div class=\"section\">\n    <span class=\"left\">Email</span>\n    <span class=\"right\">{{ user.email }}</span>\n  </div>\n  <div class=\"section\">\n    <span class=\"left\">ID</span>\n    <span class=\"right\">{{ user._id }}</span>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BalanceComponent } from './balance/balance.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AccountComponent } from './account/account.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'reports', component: BalanceComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'account', component: AccountComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  value:string;\n  isValid:boolean;\n  constructor(private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    this.value = this.cookie.get('jwt');\n    this.isValid=this.value.length>20?true:false;    \n    console.log(\"COOKIE VALUE IN APP COMPONENT >>>\", this.value);\n  }\n}\n","<header>\n  <div class=\"container\">\n    <a href=\"#\" class=\"logo\">Asset Management Pro</a>\n    <nav *ngIf=\"isValid\">\n      <ul>\n        <li>\n          <a href=\"#\" routerLink=\"/\">Home</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/reports\">Reports</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/account\">Account</a>\n        </li>\n       \n        <li>\n          <a href=\"#\" routerLink=\"/logout\">Logout</a>\n        </li>\n      </ul>\n    </nav>\n    <nav *ngIf=\"!isValid\">\n      <ul>\n        <li>\n          <a href=\"#\" routerLink=\"/\">Home</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/reports\">Reports</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/signup\">Signup</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/login\">Login</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BalanceComponent } from './balance/balance.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './logout/logout.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthHttpInterceptor } from './authHttpInterceptor';\nimport { AccountComponent } from './account/account.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BalanceComponent,\n    HomeComponent,\n    SignupComponent,\n    LoginComponent,\n    LogoutComponent,\n    AccountComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,    \n  ],\n  providers: [\n    CookieService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHttpInterceptor,\n      multi: true,\n    },\n    LoginComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { LoginComponent } from './login/login.component';\n\n@Injectable()\nexport class AuthHttpInterceptor implements OnInit, HttpInterceptor {\n  requestCounter: number = 0;\n  message: string;\n  subscription: Subscription;\n\n  constructor(private data: LoginComponent, private cookie: CookieService) {}\n  token: string;\n\n  ngOnInit() {\n    console.log('MESSSAGE>>>');\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    \n\n    request = request.clone({\n      headers: request.headers.set(\n        'Authorization',\n        'Bearer ' + this.cookie.get('jwt')\n      ),\n    });\n\n    if (!request.headers.has('Content-Type')) {\n      request = request.clone({\n        headers: request.headers.set('Content-Type', 'application/json'),\n      });\n    }\n\n    request = request.clone({\n      headers: request.headers.set('Accept', 'application/json'),\n    });\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          console.log('event--->>>', event);\n        }\n        return event;\n      })\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-balance',\n  templateUrl: './balance.component.html',\n  styleUrls: ['./balance.component.scss'],\n})\nexport class BalanceComponent implements OnInit {\n  reports;  \n  balances;\n  isValid: boolean;\n  isLoggedIn: boolean;\n  \n\n  constructor(private http: HttpService, private cookie: CookieService) {}\n  ngOnInit(): void {\n    if(this.cookie.get('jwt').length>20){\n      this.isLoggedIn=true; \n      this.http.getData().subscribe((data) => {\n        this.reports = data;\n        this.balances=this.reports[1];\n        this.isValid = this.balances.length > 0 ? true : false;\n        console.log('reports in BALANCE COMPONENT>>', this.reports);\n      });\n    }else{\n      this.isLoggedIn=false;\n    }\n  }\n}\n","<h1>Balance Sheet</h1>\n<div class=\"container\">\n  <div *ngIf=\"isLoggedIn\">\n    <ul *ngIf=\"isValid\">\n      <li *ngFor=\"let balance of balances\">\n        <p class=\"section\">\n          <span class=\"left\">Date&nbsp;&nbsp;</span>\n          <span class=\"left\">{{ balance.reportDate.split(\"T\")[0] }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Company&nbsp;&nbsp;</span>\n          <span class=\"right\">{{ balance.company }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Assets</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Capital</span\n          ><span class=\"right\">{{ balance.bank }}</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Current Assets</span\n          ><span class=\"right\">{{ balance.currentAssets }}</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Fixed Assets</span>\n          <span class=\"right\">{{ balance.fixedAssets }}</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Total Current Assets</span>\n          <span class=\"right\">{{ balance.totalCurrentAssets }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Liabilities</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Current Liabilities</span\n          ><span class=\"right\">{{ balance.currentLiabilities }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Equity</span>\n          <span class=\"right\">{{ balance.equity }}</span>\n        </p>\n      </li>\n    </ul>\n    <div class=\"message\" *ngIf=\"!isValid\">\n      <p>\n        Please check your email. Verify your account from the link provided in\n        the email to access your reports\n      </p>\n    </div>\n  </div>\n  <div class=\"message\" *ngIf=\"!isLoggedIn\">\n    <p>\n      Please log in with your email and password to view your Accounting Reports\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  clickCounter: number = 0;\n  user: Object;\n  name: string;\n  isLoggedIn: boolean;\n\n  constructor(private http: HttpService, private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    if (this.cookie.get('jwt').length > 20) {\n      this.isLoggedIn = true;\n      this.http.getData().subscribe((data) => {\n        this.user = data;\n        // this.isValid = this.reports.length > 0 ? true : false;\n        this.name = this.user[0].name;\n        console.log('USER FROM HOME>>>', this.name);\n      });\n    } else {\n      this.isLoggedIn = false;\n    }\n  }\n\n  onClick() {\n    window.location.assign('/reports');\n  }\n\n  onSignout() {\n    window.location.assign('/logout');\n  }\n\n  onLogin() {\n    window.location.assign('/login');\n  }\n\n  onProfileView() {\n    window.location.assign('/account');\n  }\n}\n","<div *ngIf=\"isLoggedIn\">\n  <h3>Welcome {{ name }}!</h3>\n\n  <div class=\"container\">\n      <p>\n        View your <strong>Asset Management Pro</strong> profile &nbsp; &nbsp;<span (click)=\"onProfileView()\">My Profile</span>\n      </p>\n    <p>\n      View your Accounting Reports from <strong>Xero</strong> &nbsp; &nbsp;<span\n        (click)=\"onClick()\"\n        >Balance Sheet</span\n      >\n    </p>\n    <p>Sign out &nbsp; &nbsp;<span (click)=\"onSignout()\">Log Out</span></p>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoggedIn\">\n  <div class=\"container\">\n  \n    <p>\n      View your Accounting Reports from Xero &nbsp; &nbsp;<span\n        (click)=\"onClick()\"\n        >Balance Sheet</span\n      >\n    </p>\n    <p>Log in &nbsp; &nbsp;<span (click)=\"onLogin()\">Log In</span></p>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com';\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get(`${this.SERVER_URL}/users/data`);\n  }\n\n  getUserData() {\n    return this.http.get(`${this.SERVER_URL}/users/userData`);\n  }\n\n  onLogin(email, password) {\n    console.log(email, password);\n    return this.http.post(`${this.SERVER_URL}/users/login`, {\n      email,\n      password,\n    });\n  }\n\n  onSignup(name, company, email, password, passwordConfirm) {\n    console.log(name, company, email, password, passwordConfirm);\n    return this.http.post(`${this.SERVER_URL}/users/signup`, {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n    });\n  }\n\n  onLogout() {\n    return this.http.get(`${this.SERVER_URL}/users/logout`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com/users/login';\n  email: '';\n  password: '';\n\n  tokenSource;\n  currentToken;\n\n  constructor(private http: HttpClient, private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    this.tokenSource = new BehaviorSubject('default token');\n    this.currentToken = this.tokenSource.asObservable();\n    this.currentToken.subscribe((val) => console.log('VAL : ', val));\n  }\n\n  onLogin() {\n    this.http\n      .post<any>(this.SERVER_URL, {\n        email: this.email,\n        password: this.password,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res);\n          if (res.status === 'success') {\n            this.cookie.set('userid', res.data.user._id);\n            this.cookie.set('jwt', res.token);\n            this.tokenSource.next(res.token);\n            window.setTimeout(() => location.assign('/reports'), 1000);\n          }\n        },\n        (err) => alert(err.message)\n      );\n  }\n}\n","<h2>Login</h2>\n<form>\n  <div class=\"form-group\">\n    <label for=\"username\">Email</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"email\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <button (click)=\"onLogin()\">Login</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com/users/logout';\n  value: string;\n  isValid: boolean;\n\n  constructor(private http: HttpClient, private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    this.value = this.cookie.get('jwt');\n    this.isValid = this.value.length > 20 ? true : false;\n  }\n\n  onLogout() {\n    this.http.get(this.SERVER_URL).subscribe(\n      (res) => {\n        if (res['status'] === 'success') {\n          this.cookie.set('userid', 'none');\n          this.cookie.set('jwt', 'loggedout');\n          window.location.href = window.location.href;\n        }\n      },\n      (err) => alert(err.message)\n    );\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"isValid\">\n    <button (click)=\"onLogout()\">Confirm Logout</button>\n  </div>\n  <div>\n    <div *ngIf=\"!isValid\">\n      <h4>You have successfully logged out</h4>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com/users/signup';\n  name: '';\n  company: '';\n  email: '';\n  password: '';\n  passwordConfirm: '';\n\n  constructor(private http: HttpClient, private cookie: CookieService) {}\n\n  ngOnInit(): void {}\n\n  onSignup() {\n    this.http\n      .post<any>(this.SERVER_URL, {\n        name: this.name,\n        company: this.company,\n        email: this.email,\n        password: this.password,\n        passwordConfirm: this.passwordConfirm,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res);\n          this.cookie.set('userid', res.data.user._id);\n          this.cookie.set('jwt', res.token);\n          alert('Signup successful. Please login');\n          window.setTimeout(() => location.assign('/login'), 1000);\n        },\n        (err) => console.log(err)\n      );\n  }\n}\n","<h2>Sign Up</h2>\n\n<form>\n  <div class=\"form-group\">\n    <label for=\"username\">Name</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"name\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"company\">Company</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"company\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n    <p>as on your Xero account</p>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Email</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"email\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n    <p>min 8 characters</p>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Confirm Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"passwordConfirm\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <button (click)=\"onSignup()\">Sign Up</button>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}