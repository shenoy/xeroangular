{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authHttpInterceptor.ts","./src/app/balance/balance.component.ts","./src/app/balance/balance.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/http.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss'],\n})\nexport class AccountComponent implements OnInit {\n  allData: Object;\n  name;\n  user;\n  id;\n  email;\n  company;\n\n  constructor(private http: HttpService) {}\n\n  ngOnInit(): void {\n    this.http.getData().subscribe((data) => {\n      this.allData = data;\n      this.user = this.allData[0];\n    \n      console.log('USER DATA IN ACCOUNT', this.user);\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"section\">\n    <span class=\"left\">Name&nbsp;&nbsp;</span>\n    <span class=\"right\">{{ user.name }}</span>\n  </div>\n  <div class=\"section\">\n    <span class=\"left\">Company</span>\n    <span class=\"right\">{{ user.company }}</span>\n  </div>\n  <div class=\"section\">\n    <span class=\"left\">Email</span>\n    <span class=\"right\">{{ user.email }}</span>\n  </div>\n  <div class=\"section\">\n    <span class=\"left\">ID</span>\n    <span class=\"right\">{{ user._id }}</span>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BalanceComponent } from './balance/balance.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AccountComponent } from './account/account.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'reports', component: BalanceComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'account', component: AccountComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  value:string;\n  isValid:boolean;\n  constructor(private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    this.value = this.cookie.get('jwt');\n    this.isValid=this.value.length>20?true:false;    \n    console.log(\"COOKIE VALUE IN APP COMPONENT >>>\", this.value);\n  }\n}\n","<header>\n  <div class=\"container\">\n    <a href=\"#\" class=\"logo\">Asset Management Pro</a>\n    <nav *ngIf=\"isValid\">\n      <ul>\n        <li>\n          <a href=\"#\" routerLink=\"/\">Home</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/reports\">Reports</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/account\">Account</a>\n        </li>\n       \n        <li>\n          <a href=\"#\" routerLink=\"/logout\">Logout</a>\n        </li>\n      </ul>\n    </nav>\n    <nav *ngIf=\"!isValid\">\n      <ul>\n        <li>\n          <a href=\"#\" routerLink=\"/\">Home</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/reports\">Reports</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/signup\">Signup</a>\n        </li>\n        <li>\n          <a href=\"#\" routerLink=\"/login\">Login</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BalanceComponent } from './balance/balance.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './logout/logout.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthHttpInterceptor } from './authHttpInterceptor';\nimport { AccountComponent } from './account/account.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BalanceComponent,\n    HomeComponent,\n    SignupComponent,\n    LoginComponent,\n    LogoutComponent,\n    AccountComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,    \n  ],\n  providers: [\n    CookieService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHttpInterceptor,\n      multi: true,\n    },\n    LoginComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable, OnInit } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { LoginComponent } from './login/login.component';\n\n@Injectable()\nexport class AuthHttpInterceptor implements OnInit, HttpInterceptor {\n  requestCounter: number = 0;\n  message: string;\n  subscription: Subscription;\n\n  constructor(private data: LoginComponent, private cookie: CookieService) {}\n  token: string;\n\n  ngOnInit() {\n    console.log('MESSSAGE>>>');\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    \n\n    request = request.clone({\n      headers: request.headers.set(\n        'Authorization',\n        'Bearer ' + this.cookie.get('jwt')\n      ),\n    });\n\n    if (!request.headers.has('Content-Type')) {\n      request = request.clone({\n        headers: request.headers.set('Content-Type', 'application/json'),\n      });\n    }\n\n    request = request.clone({\n      headers: request.headers.set('Accept', 'application/json'),\n    });\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          console.log('event--->>>', event);\n        }\n        return event;\n      })\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-balance',\n  templateUrl: './balance.component.html',\n  styleUrls: ['./balance.component.scss'],\n})\nexport class BalanceComponent implements OnInit {\n  reports;  \n  balances;\n  isValid: boolean;\n  isLoggedIn: boolean;\n  \n\n  constructor(private http: HttpService, private cookie: CookieService) {}\n  ngOnInit(): void {\n    if(this.cookie.get('jwt').length>20){\n      this.isLoggedIn=true; \n      this.http.getData().subscribe((data) => {\n        this.reports = data;\n        this.balances=this.reports[1];\n        this.isValid = this.balances.length > 0 ? true : false;\n        console.log('reports in BALANCE COMPONENT>>', this.reports);\n      });\n    }else{\n      this.isLoggedIn=false;\n    }\n  }\n}\n","<h1>Balance Sheet</h1>\n<div class=\"container\">\n  <div *ngIf=\"isLoggedIn\">\n    <ul *ngIf=\"isValid\">\n      <li *ngFor=\"let balance of balances\">\n        <p class=\"section\">\n          <span class=\"left\">Date&nbsp;&nbsp;</span>\n          <span class=\"left\">{{ balance.reportDate.split(\"T\")[0] }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Company&nbsp;&nbsp;</span>\n          <span class=\"right\">{{ balance.company }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Assets</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Capital</span\n          ><span class=\"right\">{{ balance.bank }}</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Current Assets</span\n          ><span class=\"right\">{{ balance.currentAssets }}</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Fixed Assets</span>\n          <span class=\"right\">{{ balance.fixedAssets }}</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Total Current Assets</span>\n          <span class=\"right\">{{ balance.totalCurrentAssets }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Liabilities</span>\n        </p>\n        <p class=\"balancesElement\">\n          <span class=\"left\">Current Liabilities</span\n          ><span class=\"right\">{{ balance.currentLiabilities }}</span>\n        </p>\n        <p class=\"section\">\n          <span class=\"left\">Equity</span>\n          <span class=\"right\">{{ balance.equity }}</span>\n        </p>\n      </li>\n    </ul>\n    <div class=\"message\" *ngIf=\"!isValid\">\n      <p>\n        Please check your email. Verify your account from the link provided in\n        the email to access your reports\n      </p>\n    </div>\n  </div>\n  <div class=\"message\" *ngIf=\"!isLoggedIn\">\n    <p>\n      Please log in with your email and password to view your Accounting Reports\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  clickCounter: number = 0;\n  user: Object;\n  name: string;\n  isLoggedIn: boolean;\n\n  constructor(private http: HttpService, private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    if (this.cookie.get('jwt').length > 20) {\n      this.isLoggedIn = true;\n      this.http.getData().subscribe((data) => {\n        this.user = data;\n        // this.isValid = this.reports.length > 0 ? true : false;\n        this.name = this.user[0].name;\n        console.log('USER FROM HOME>>>', this.name);\n      });\n    } else {\n      this.isLoggedIn = false;\n    }\n  }\n\n  onClick() {\n    window.location.assign('/reports');\n  }\n\n  onSignout() {\n    window.location.assign('/logout');\n  }\n\n  onLogin() {\n    window.location.assign('/login');\n  }\n\n  onProfileView() {\n    window.location.assign('/account');\n  }\n\n  onSignup() {\n    window.location.assign('/signup');\n  }\n}\n","<div *ngIf=\"isLoggedIn\">\n  <h3>Welcome {{ name }}!</h3>\n\n  <div class=\"container\">\n    <p>\n      View your <strong>Asset Management Pro</strong> profile &nbsp; &nbsp;<span\n        (click)=\"onProfileView()\"\n        >My Profile</span\n      >\n    </p>\n    <p>\n      View your Accounting Reports from <strong>Xero</strong> &nbsp; &nbsp;<span\n        (click)=\"onClick()\"\n        >Balance Sheet</span\n      >\n    </p>\n    <p>Sign out &nbsp; &nbsp;<span (click)=\"onSignout()\">Log Out</span></p>\n    <h4>4 Easy Steps to get your account up and running</h4>\n    <ul>\n      <li>Sign up with Asset Managment Pro</li>\n      <li>\n        Check your email and verify by logging into Xero Accounting Reports\n      </li>\n      <li>You will be redirected to the Asset Managment Pro account</li>\n      <li>\n        Every time you login, your Monthly balance sheet will be updated for\n        that date\n      </li>\n    </ul>\n  </div>\n</div>\n\n<div *ngIf=\"!isLoggedIn\">\n  <div class=\"container\">\n\n      <h1>Welcome to Asset Management Pro!</h1>\n\n    <p>\n      View your Accounting Reports from Xero &nbsp; &nbsp;<span\n        (click)=\"onClick()\"\n        >Balance Sheet</span\n      >\n    </p>\n    <p>Log in to your Asset Management Pro account &nbsp; &nbsp;<span (click)=\"onLogin()\">Log In</span></p>\n    <p>Sign up for a new account &nbsp; &nbsp;<span (click)=\"onSignup()\">Sign Up</span></p>\n\n\n    <h3>4 Easy Steps to get your account up and running</h3>\n    <ul>\n      <li>Sign up with Asset Management Pro using your company name registered with  Xero Accounting Reports</li>\n      <li>\n        Check your email and verify by logging into Xero Accounting Reports\n      </li>\n      <li>You will be redirected to the Asset Managment Pro account</li>\n      <li>\n        Every time you login, a new Monthly Balance Sheet will be added for that date\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com';\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get(`${this.SERVER_URL}/users/data`);\n  }\n\n  getUserData() {\n    return this.http.get(`${this.SERVER_URL}/users/userData`);\n  }\n\n  onLogin(email, password) {\n    console.log(email, password);\n    return this.http.post(`${this.SERVER_URL}/users/login`, {\n      email,\n      password,\n    });\n  }\n\n  onSignup(name, company, email, password, passwordConfirm) {\n    console.log(name, company, email, password, passwordConfirm);\n    return this.http.post(`${this.SERVER_URL}/users/signup`, {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n    });\n  }\n\n  onLogout() {\n    return this.http.get(`${this.SERVER_URL}/users/logout`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com/users/login';\n  email: '';\n  password: '';\n\n  tokenSource;\n  currentToken;\n\n  constructor(private http: HttpClient, private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    this.tokenSource = new BehaviorSubject('default token');\n    this.currentToken = this.tokenSource.asObservable();\n    this.currentToken.subscribe((val) => console.log('VAL : ', val));\n  }\n\n  onLogin() {\n    this.http\n      .post<any>(this.SERVER_URL, {\n        email: this.email,\n        password: this.password,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res);\n          if (res.status === 'success') {\n            this.cookie.set('userid', res.data.user._id);\n            this.cookie.set('jwt', res.token);\n            this.tokenSource.next(res.token);\n            window.setTimeout(() => location.assign('/reports'), 1000);\n          }\n        },\n        (err) => alert(err.message)\n      );\n  }\n}\n","<h2>Login</h2>\n<form>\n  <div class=\"form-group\">\n    <label for=\"username\">Email</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"email\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <button (click)=\"onLogin()\">Login</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com/users/logout';\n  value: string;\n  isValid: boolean;\n\n  constructor(private http: HttpClient, private cookie: CookieService) {}\n\n  ngOnInit(): void {\n    this.value = this.cookie.get('jwt');\n    this.isValid = this.value.length > 20 ? true : false;\n  }\n\n  onLogout() {\n    this.http.get(this.SERVER_URL).subscribe(\n      (res) => {\n        if (res['status'] === 'success') {\n          this.cookie.set('userid', 'none');\n          this.cookie.set('jwt', 'loggedout');\n          window.location.href = window.location.href;\n        }\n      },\n      (err) => alert(err.message)\n    );\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"isValid\">\n    <button (click)=\"onLogout()\">Confirm Logout</button>\n  </div>\n  <div>\n    <div *ngIf=\"!isValid\">\n      <h4>You have successfully logged out</h4>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  SERVER_URL = 'https://assetmanpro.herokuapp.com/users/signup';\n  name: '';\n  company: '';\n  email: '';\n  password: '';\n  passwordConfirm: '';\n\n  constructor(private http: HttpClient, private cookie: CookieService) {}\n\n  ngOnInit(): void {}\n\n  onSignup() {\n    this.http\n      .post<any>(this.SERVER_URL, {\n        name: this.name,\n        company: this.company,\n        email: this.email,\n        password: this.password,\n        passwordConfirm: this.passwordConfirm,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res);\n          this.cookie.set('userid', res.data.user._id);\n          this.cookie.set('jwt', res.token);\n          alert('Signup successful. Please login');\n          window.setTimeout(() => location.assign('/login'), 1000);\n        },\n        (err) => console.log(err)\n      );\n  }\n}\n","<h2>Sign Up</h2>\n\n<form>\n  <div class=\"form-group\">\n    <label for=\"username\">Name</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"name\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"company\">Company</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"company\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n    <p>as on your Xero account</p>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Email</label>\n    <input\n      type=\"text\"\n      [(ngModel)]=\"email\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"password\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n    <p>min 8 characters</p>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Confirm Password</label>\n    <input\n      type=\"password\"\n      [(ngModel)]=\"passwordConfirm\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </div>\n  <button (click)=\"onSignup()\">Sign Up</button>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}